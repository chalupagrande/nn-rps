{"version":3,"sources":["app.js"],"names":["stats","win","tie","loss","total","counting","buttons","document","querySelectorAll","forEach","b","addEventListener","e","preventDefault","val","target","value","handleVote","window","key","vote","keyCode","hv","cv","chooseRandom","r","determineWinner","countDown","humanVote","compVote","result","sendResults","count","updateWinLossColors","id","setInterval","run","clearInterval","finishScreen","querySelector","innerText","updateStats","updateMoves","payload","JSON","stringify","game","myInit","method","headers","body","mode","cache","fetch","then","res","json","console","log","p","classList","remove","add","h","c","toUpperCase","hc","createElement","cc","hl","cl","childElementCount","children","prepend","c1","c2","choices","Math","floor","random","n","t","round"],"mappings":"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","file":"app.js","sourcesContent":["\nconst stats = {\n  win: 0,\n  tie: 0,\n  loss: 0,\n  total: 0\n}\nlet counting = false\n// ^^^^ prevents multiple votes during countdown\n\n// Event Listeners\nconst buttons = document.querySelectorAll('button')\nbuttons.forEach(b=>b.addEventListener('click', (e)=>{\n  e.preventDefault()\n  let val = e.target.value\n  if(!counting) handleVote(val)\n}))\n\nwindow.addEventListener('keydown', e=>{\n  const key = {37: 'rock',82:'rock',\n            80: 'paper', 40: 'paper',\n            83: 'scissors', 39: 'scissors'}\n  const vote = key[e.keyCode]\n  if(vote && !counting) handleVote(vote)\n})\n\n// Runner Functions\nfunction handleVote(hv){\n  if(!counting){\n    let cv = chooseRandom()\n    let r = determineWinner(hv, cv)\n    countDown(hv, cv, r)\n  }\n}\n\nfunction countDown(humanVote, compVote, result){\n  counting = true\n  sendResults(humanVote, compVote)\n  let count = 3\n  updateWinLossColors(0)\n  const id = setInterval(run, 700)\n  run()\n\n  function run(){\n    if(count == 0){\n      window.clearInterval(id)\n      finishScreen(humanVote, compVote, result)\n      counting = false\n    } else {\n      document.querySelector('.choice.human').innerText = count\n      document.querySelector('.choice.computer').innerText = count\n    }\n    count -= 1\n  }\n}\n\nfunction finishScreen(humanVote, compVote, result){\n  updateStats(result)\n  updateMoves(humanVote, compVote, result)\n}\n\nfunction sendResults(hv,cv){\n  let payload = JSON.stringify({\n    game: [hv, cv],\n    stats\n  })\n  //make request. \n  let myInit = { \n                method: 'POST',\n                headers: {\n                      'Accept': 'application/json, text/plain, */*',\n                      'Content-Type': 'application/json'\n                  },\n                body: payload,\n                mode: 'cors',\n                cache: 'default'\n              };\n  fetch('http://localhost:3000/api/test', myInit)\n  .then((res)=>{\n    return res.json()\n  })\n  .then((json)=>{\n    console.log(json)\n  })\n}\n\nfunction updateStats(result){\n  if(result >= 1) stats.win +=1;\n  else if(result == 0) stats.tie +=1;\n  else stats.loss +=1;\n  stats.total +=1\n\n  document.querySelector('.stat--number.win').innerText = stats.win\n  document.querySelector('.stat--number.tie').innerText = stats.tie\n  document.querySelector('.stat--number.loss').innerText = stats.loss\n\n  document.querySelector('.stat--percentage.win').innerText = p(stats.win, stats.total)\n  document.querySelector('.stat--percentage.tie').innerText = p(stats.tie, stats.total)\n  document.querySelector('.stat--percentage.loss').innerText = p(stats.loss, stats.total)\n}\n\n// Change the Colors of the Play depending on WIN or LOSS\nfunction updateWinLossColors(r){\n  let hv = document.querySelector('.choice.human')\n  let cv = document.querySelector('.choice.computer')\n  if(r >=1){ \n    hv.classList.remove('loss')\n    hv.classList.add('win')\n    cv.classList.remove('win')\n    cv.classList.add('loss')\n  } else if(r ==0) {\n    hv.classList.remove('loss')\n    hv.classList.remove('win')\n    cv.classList.remove('win')\n    cv.classList.remove('loss')\n  } else {\n    hv.classList.remove('win')\n    hv.classList.add('loss')\n    cv.classList.remove('loss')\n    cv.classList.add('win')\n  }\n}\n\n// Update Previous Moves List\nfunction updateMoves(h,c,r){\n  h = h.toUpperCase()\n  c = c.toUpperCase()\n  updateWinLossColors(r)\n  document.querySelector('.choice.human').innerText = h\n  document.querySelector('.choice.computer').innerText = c\n  \n  let hc = document.createElement('li')\n  hc.innerText = h\n  let cc = document.createElement('li')\n  cc.innerText = c\n\n  let hl = document.querySelector('.move-list.human')\n  let cl = document.querySelector('.move-list.computer')\n\n  //cap the moves list to 10\n  if(hl.childElementCount >= 10){\n    hl.children[9].remove()\n    cl.children[9].remove()\n  }\n  hl.prepend(hc)\n  cl.prepend(cc)\n}\n\nfunction determineWinner(c1, c2){\n  if(c1 == 'rock'){\n    if(c2 == 'rock') return 0\n    if(c2 == 'scissors') return 1\n    if(c2 == 'paper') return -1\n  }\n  else if(c1 == 'paper'){\n    if(c2 == 'paper') return 0\n    else if(c2 == 'rock') return 1\n    else if(c2 == 'scissors') return -1\n  }\n  else if(c1 == 'scissors'){\n    if(c2 == 'scissors') return 0\n    else if(c2 == 'paper') return 1\n    else if(c2 == 'rock') return -1\n  }\n}\n\n// Choose random play. Rock, Paper, or Scissors\nfunction chooseRandom(){\n  const choices = ['rock', 'paper', 'scissors']\n  return choices[Math.floor(Math.random()*3)]\n}\n\n// Helper functions\n//conver to percent\nfunction p(n,t){\n  return Math.round(((n/t)*1000)/10) + '%'\n}\n"]}